#!/bin/bash

# Useful info found at http://www.linuxjournal.com/content/more-using-bash-complete-command

sh -c "ensure-files.sh &"

mu_complete() {
    local cmd="${1##*/}"
    local word=${COMP_WORDS[COMP_CWORD]}
    local line=${COMP_LINE}
    local words=($line) # split line into words
    local lastchar="${line: -1}"
    local wordcount=${#words[@]}

    # echo "Words is ${words[0]},${words[1]},${words[2]},${words[3]},${words[4]} !!"

    # echo "Word two is '${words[2]}'"

    case ${words[1]} in
        project)
            case ${words[2]} in
                new)
                    ;;
                doc)
                    ;;
                add)
                    case ${words[3]} in
                        service)
                            if (( COMP_CWORD > 4 )); then
                                IMAGE=${words[4]}
                                ac_tag_list=$(</tmp/mu-semte.ch.$IMAGE.tags)
                                COMPREPLY=(`compgen -W "$ac_tag_list" $word`)
                            else
                                ac_image_list=$(</tmp/mu-semte.ch.images)
                                COMPREPLY=(`compgen -W "$ac_image_list" $word`)
                            fi
                            ;;
                        *)
                            COMPREPLY=(`compgen -W "service" $word`)
                            ;;
                    esac
                    ;;
                *)
                    COMPREPLY=(`compgen -W "new doc add" $word`)
                    ;;
            esac
            ;;
        service)
            case ${words[2]} in
                new)
                    case ${words[3]} in
                        ruby)
                            ;;
                        javascript)
                            ;;
                        *)
                            COMPREPLY=(`compgen -W "ruby javascript" $word`)
                            ;;
                    esac
                    ;;
                *)
                    COMPREPLY=(`compgen -W "new" $word`)
                    ;;
            esac
            ;;
        migration)
            case ${words[2]} in
                new)
                    ;;
                *)
                COMPREPLY=(`compgen -W "new" $word`)
            esac
            ;;
        *)
            COMPREPLY=(`compgen -W "project service migration" $word`)
            ;;
    esac
}

complete -F mu_complete mu
